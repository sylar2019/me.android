buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}"
    }
}

apply from: gradlesPath + "utils.gradle"
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

/**
 * ### 脚本说明 ###
 * docker镜像的生成与发布
 * ###
 * @see {https://bmuschko.github.io/gradle-docker-plugin/#spring_boot_application_plugin}
 */

assemble.doLast {
    //拷贝Dockerfile和jar，docker使用
    copyDockerfile()
}

def copyDockerfile() {
    println("### appJar:${appJar}")
    println("### appPath:${appPath}")
    mkdir('build/docker/')
    copyDocker()
    copyJar()
}

def copyDocker() {
    copy {
        from("${appPath}/src/docker")
        into("${appPath}/build/docker")
    }
}

def copyJar() {
    copy {
        from("${appPath}/build/libs")
        into("${appPath}/build/docker")
        include "${appJar}"
        rename("${appJar}", 'app.jar')
    }
}


// Use task types
task buildOwnDockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage, dependsOn: assemble) {
    dockerFile = file("${appPath}/build/docker/Dockerfile")
    inputDir = file("${appPath}/build/docker/")
    images.add("${project.name}:latest")
}


docker {
    //镜像发布
//    url = 'https://192.168.59.103:2376'
//    certPath = new File(System.properties['user.home'], '.boot2docker/certs/boot2docker-vm')
//
//    registryCredentials {
//        url = 'https://index.docker.io/v1/'
//        username = 'user'
//        password = 'pwd'
//        email = '81623859@qq.com'
//    }
}

